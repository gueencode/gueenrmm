trigger:
  - master
  - develop

jobs:
  - job: setup_env
    displayName: "Setup"
    strategy:
      matrix:
        Debian10:
          AGENT_NAME: "az-pipeline-fran"

    pool:
      name: linux-vms
      demands:
        - agent.name -equals $(AGENT_NAME)

    steps:
      - script: |
          sudo -u postgres psql -c 'DROP DATABASE IF EXISTS pipeline'
          sudo -u postgres psql -c 'DROP DATABASE IF EXISTS test_pipeline'
          sudo -u postgres psql -c 'CREATE DATABASE pipeline'
          sudo -u postgres psql -c "SET client_encoding = 'UTF8'" pipeline
          SETTINGS_FILE="/myagent/_work/1/s/api/gueenrmm/gueenrmm/settings.py"
          rm -rf /myagent/_work/1/s/api/env
          cd /myagent/_work/1/s/api
          python3.9 -m venv env
          source env/bin/activate
          cd /myagent/_work/1/s/api/gueenrmm
          pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --upgrade pip
          SETUPTOOLS_VER=$(grep "^SETUPTOOLS_VER" "$SETTINGS_FILE" | awk -F'[= "]' '{print $5}')
          WHEEL_VER=$(grep "^WHEEL_VER" "$SETTINGS_FILE" | awk -F'[= "]' '{print $5}')
          pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org setuptools==${SETUPTOOLS_VER} wheel==${WHEEL_VER}
          pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r requirements.txt -r requirements-test.txt -r requirements-dev.txt
        displayName: "Install Python Dependencies"

      - script: |
          cd /myagent/_work/1/s/api
          source env/bin/activate
          cd /myagent/_work/1/s/api/gueenrmm
          coverage run manage.py test -v 2
          if [ $? -ne 0 ]; then
              exit 1
          fi
        displayName: "Run django tests"

      - script: |
          cd /myagent/_work/1/s/api
          source env/bin/activate
          black --exclude migrations/ --check gueenrmm
          if [ $? -ne 0 ]; then
              exit 1
          fi
        displayName: "Codestyle black"

      - script: |
          cd /myagent/_work/1/s/api
          source env/bin/activate
          cd /myagent/_work/1/s/api/gueenrmm
          export CIRCLE_BRANCH=$BUILD_SOURCEBRANCH
          coveralls
        displayName: "coveralls"
        env:
          CIRCLECI: 1
          CIRCLE_BUILD_NUM: $(Build.BuildNumber)
